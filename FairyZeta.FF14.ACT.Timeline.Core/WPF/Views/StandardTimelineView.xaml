<UserControl x:Class="FairyZeta.FF14.ACT.Timeline.Core.WPF.Views.StandardTimelineView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:custom="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Custom"
             xmlns:dvm="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Desing"
             xmlns:fControl="clr-namespace:FairyZeta.Framework.WPF.Converters;assembly=FairyZeta.Framework"
             xmlns:fBehaviors="clr-namespace:FairyZeta.Framework.WPF.Behaviors;assembly=FairyZeta.Framework"
             xmlns:fConverter="clr-namespace:FairyZeta.Framework.WPF.Converters;assembly=FairyZeta.Framework"
             xmlns:behaviors="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Behavior"
             xmlns:converter="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=dvm:Desing_BaseWindowViewModel, IsDesignTimeCreatable=True}"
             xmlns:timelineCore="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Style/StandardTimelineStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <fConverter:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
            <converter:OpacityConverter x:Key="opacityConverter"/>
            <converter:ColorToShadowColorConverter x:Key="ShadowColorConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>

            <Style x:Key="HeaderText" TargetType="{x:Type TextBlock}"/>
            <Style x:Key="HeaderSplitter" TargetType="{x:Type GridSplitter}">
                <Setter Property="Width" Value="1"/>
            </Style>
            <Style x:Key="ContentSplitter" TargetType="{x:Type GridSplitter}">
            </Style>


            <SolidColorBrush x:Key="Enemy1" Color="#BFE2EBF5"/>

            <SolidColorBrush x:Key="TANK1" Color="#BF344396"/>
            <SolidColorBrush x:Key="TANK2" Color="#E24054BF"/>
            <SolidColorBrush x:Key="HEALER1" Color="#BF396527"/>
            <SolidColorBrush x:Key="HEALER2" Color="#E24C8D32"/>
            <SolidColorBrush x:Key="DPS1" Color="#BF653232"/>
            <SolidColorBrush x:Key="DPS2" Color="#E2A04242"/>

            <SolidColorBrush x:Key="Pet1" Color="#BF969334"/>
            <SolidColorBrush x:Key="UNKNOWN1" Color="#BFD3D3D3"/>
            <SolidColorBrush x:Key="Me1" Color="#BFFFF700"/>

            <SolidColorBrush x:Key="RoleColor_Enemy1" Color="#E2EBF5"/>

            <SolidColorBrush x:Key="RoleColor_GIMMICK" Color="#BFD64E00"/>

            <SolidColorBrush x:Key="BaseColor_Blue1" Color="#FFC6D3DE"/>
            <SolidColorBrush x:Key="BaseColor_Blue1_Shadow" Color="#FF035B8D"/>
            <SolidColorBrush x:Key="BaseColor_Gold1" Color="#DED7BE"/>
            <SolidColorBrush x:Key="BaseColor_Gold1_Shadow" Color="#795516"/>

            <Style x:Key="OutlineTextBlock" TargetType="{x:Type TextBlock}">
                
                <Style.Resources>
                    <!--
                    <DropShadowEffect x:Key="TestEffect1" BlurRadius="1" Direction="315" ShadowDepth="0"
                                  Color="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TextColor_Shadow, 
                                  RelativeSource={RelativeSource  Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
                    <DropShadowEffect x:Key="EffectENEMY_01"  BlurRadius="2" Direction="315" ShadowDepth="1"
                                  Color="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColor_ENEMY_Shadow, 
                                  RelativeSource={RelativeSource  Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
                    -->
                    <DropShadowEffect x:Key="EffectUNKNOWN_01" Color="#88217AA2" BlurRadius="2" Direction="315" ShadowDepth="1"/>
                    <DropShadowEffect x:Key="EffectTANK_01" Color="#88217AA2" BlurRadius="2" Direction="315" ShadowDepth="1"/>
                    <DropShadowEffect x:Key="EffectHEALER_01" Color="#88217AA2" BlurRadius="2" Direction="315" ShadowDepth="1"/>
                    <DropShadowEffect x:Key="EffectDPS_01" Color="#88217AA2" BlurRadius="2" Direction="315" ShadowDepth="1"/>
                    <DropShadowEffect x:Key="EffectPET_01" Color="#88217AA2" BlurRadius="2" Direction="315" ShadowDepth="1"/>
                    <DropShadowEffect x:Key="EffectGIMMICK_01" Color="#88217AA2" BlurRadius="2" Direction="315" ShadowDepth="1"/>
                </Style.Resources>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding TimelineType}" Value="{x:Static timelineCore:TimelineType.ENEMY}">

                        <Setter Property="Foreground" Value="{StaticResource Enemy1}"/>
                        <!--
                        <Setter Property="Foreground" Value="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColor_ENEMY_Base, 
                                  RelativeSource={RelativeSource  Mode=FindAncestor, AncestorType={x:Type UserControl}}, 
                                  Converter={StaticResource ColorToSolidColorBrushConverter}, Mode=OneWay}"/>
                        -->
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TimelineType}" Value="{x:Static timelineCore:TimelineType.UNKNOWN}">
                        <Setter Property="Foreground" Value="{StaticResource RoleColor_UNKNOWN1}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TimelineType}" Value="{x:Static timelineCore:TimelineType.TANK}">
                        <Setter Property="Foreground" Value="{StaticResource RoleColor_TANK2}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TimelineType}" Value="{x:Static timelineCore:TimelineType.HEALER}">
                        <Setter Property="Foreground" Value="{StaticResource RoleColor_HEALER2}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TimelineType}" Value="{x:Static timelineCore:TimelineType.DPS}">
                        <Setter Property="Foreground" Value="{StaticResource RoleColor_DPS2}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TimelineType}" Value="{x:Static timelineCore:TimelineType.PET}">
                        <Setter Property="Foreground" Value="{StaticResource RoleColor_Pet1}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding TimelineType}" Value="{x:Static timelineCore:TimelineType.GIMMICK}">
                        <Setter Property="Foreground" Value="{StaticResource RoleColor_GIMMICK}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- ヘッダー／番号 -->
            <ControlTemplate x:Key="BasicTimeNoHeaderTemplate" >
                <Grid>
                    <TextBlock Text="T-No" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" HorizontalAlignment="Center">

                    </TextBlock>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActionTimeHeaderTemplate" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Time" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicAlertHeaderTemplate" >
                <Grid>
                    <TextBlock Text="Alt" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActionHeaderTemplate" >
                <Grid>
                    <TextBlock Text="Action" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActiveHeaderTemplate" >
                <Grid>
                    <TextBlock Text="Active" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicTypeHeaderTemplate" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Type" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicJobHeaderTemplate" >
                <Grid>
                    <TextBlock Text="Job" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicJumpHeaderTemplate" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Jump" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>


            <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" EndPoint="1,0" StartPoint="0,0">
                <GradientStop Color="#00FFFFFF" Offset="0"/>
                <GradientStop Color="#60FFFFFF" Offset="0.4"/>
                <GradientStop Color="#60FFFFFF" Offset="0.6"/>
                <GradientStop Color="#00FFFFFF" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="ActiveForeground" EndPoint="0.0,0.5" StartPoint="1.0,0.5">
                <GradientStop Color="#AA8EFC21" Offset="1"/>
                <GradientStop Color="#AAE9AF10" Offset="0.515"/>
                <GradientStop Color="#AA770E17" Offset="0.128"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="DurationForeground" EndPoint="0.0,0.5" StartPoint="1.0,0.5">
                <GradientStop Color="#AA4110E9" Offset="0.515"/>
                <GradientStop Color="#AA770E17" Offset="0.128"/>
                <GradientStop Color="#AA990E17" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="ActiveBasicProgressBarStyle" TargetType="{x:Type ProgressBar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                                <!--<Rectangle Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0"/>-->
                                <!--<Rectangle x:Name="PART_Track" Margin="1" />-->
                                <Border Background="{TemplateBinding Background}" CornerRadius="5"/>
                                <Border x:Name="PART_Track" Margin="1" CornerRadius="10"/>
                                <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                                    <Grid x:Name="Foreground">
                                        <!--<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>-->
                                        <Border x:Name="Indicator" Background="{TemplateBinding Foreground}" CornerRadius="2 0 0 2"/>
                                        <Grid x:Name="Animation" ClipToBounds="true">
                                            <!--<Rectangle x:Name="PART_GlowRect" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="0"/>-->
                                            <Rectangle x:Name="PART_GlowRect" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="0" />
                                        </Grid>

                                    </Grid>
                                </Decorator>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="DurationBasicProgressBarStyle" TargetType="{x:Type ProgressBar}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                                <!--<Rectangle Fill="{TemplateBinding Background}" RadiusY="0" RadiusX="0"/>-->
                                <!--<Rectangle x:Name="PART_Track" Margin="1" />-->
                                <Border Background="{TemplateBinding Background}" CornerRadius="5"/>
                                <Border x:Name="PART_Track" Margin="1" CornerRadius="10"/>
                                <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
                                    <Grid x:Name="Foreground">
                                        <!--<Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}"/>-->
                                        <Border x:Name="Indicator" Background="{TemplateBinding Foreground}" CornerRadius="2 0 0 2"/>
                                        <Grid x:Name="Animation" ClipToBounds="true">
                                            <!--<Rectangle x:Name="PART_GlowRect" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="0"/>-->
                                            <Rectangle x:Name="PART_GlowRect" Fill="{StaticResource ProgressBarIndicatorAnimatedFill}" HorizontalAlignment="Left" Margin="-100,0,0,0" Width="20" />
                                        </Grid>

                                    </Grid>
                                </Decorator>
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation" Value="Vertical">
                                    <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- コンテンツ -->
            <ControlTemplate x:Key="BasicTimeNoContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Text="{Binding ActivityNo}" Style="{StaticResource OutlineTextBlock}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <!--Label Style="{StaticResource TimilineItemTextStyle}" Text="{Binding ActivityNo}" HorizontalAlignment="Center"/-->
                    <!--ContentStringFormat="{}{0:#0.0}"  -->
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActionTimeContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Style="{StaticResource OutlineTextBlock}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                                <Binding Path="ActivityTimeSpan.Minutes" />
                                <Binding Path="ActivityTimeSpan.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicAlertContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Text="♪" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource OutlineTextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActivityAlert}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActionContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}" Margin="10 0 0 0">
                    <TextBlock Text="{Binding ActivityName}" Style="{StaticResource OutlineTextBlock}"  VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActiveContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <ProgressBar Minimum="{Binding ActiveIndicatorMinValue}" HorizontalAlignment="Stretch"
                                 Value="{Binding DataContext.TimelineComponent.TimerDataModel.TimerDeta.CurrentCombatTime, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" 
                                 Maximum="{Binding ActiveIndicatorMaxValue}" 
                                 Margin="0 5 35 5" FlowDirection="RightToLeft" Background="Transparent" BorderBrush="Transparent"
                                 Foreground="{DynamicResource ActiveForeground}">
                    <i:Interaction.Behaviors>
                        <behaviors:ActiveGradientBehavior />
                    </i:Interaction.Behaviors>
                    <ProgressBar.Style>
                        <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ActiveBasicProgressBarStyle}"/>
                    </ProgressBar.Style>
                </ProgressBar>
                    <ProgressBar Minimum="{Binding ActivityNo}" 
                                 Value="{Binding DataContext.TimelineComponent.TimerDataModel.TimerDeta.CurrentCombatTime, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}"
                                 Maximum="{Binding DurationIndicatorMaxValue}" 
                                 Margin="0 5 35 5"
                                 Template="{StaticResource BasicProgressBar}" Background="Transparent" BorderBrush="Transparent"
                                 Foreground="{DynamicResource DurationForeground}">
                        <i:Interaction.Behaviors>
                            <behaviors:CastGradientBehavior />
                        </i:Interaction.Behaviors>
                        <ProgressBar.Style>
                            <Style TargetType="ProgressBar" BasedOn="{StaticResource DurationBasicProgressBarStyle}"/>
                        </ProgressBar.Style>
                    </ProgressBar>
                    <TextBlock Text="{Binding ActiveTime,StringFormat=N1}" Style="{StaticResource OutlineTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicTypeContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Style="{StaticResource OutlineTextBlock}" Text="{Binding TimelineType}" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicJobContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Style="{StaticResource OutlineTextBlock}" Text="{Binding JobType}" HorizontalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicJumpContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    
                </Grid>
            </ControlTemplate>

        </ResourceDictionary>


    </UserControl.Resources>


    <Grid >
        <Grid.Resources>
            <FrameworkElement x:Key="proxyElement" />
        </Grid.Resources>
        <Border Background="Black" CornerRadius="10" Opacity="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.BackgroundOpacity, Converter={StaticResource opacityConverter}}" Margin="10">
            <Border.Effect>
                <BlurEffect Radius="10" KernelType="Box"/>
            </Border.Effect>
        </Border>
        <StackPanel Opacity="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentOpacity, Converter={StaticResource opacityConverter}}" Margin="10">
            <!-- ウィンドウヘッダー -->
            <Grid Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarVisibility, Converter={StaticResource BoolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition  Width="60"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5 2">
                    <TextBlock Text="[Line-Time] " Foreground="{StaticResource BaseColor_Gold1}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}"/>
                    <TextBlock Text="--:--" Foreground="{StaticResource BaseColor_Blue1}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}"/>
                    <!--
                    <TextBlock Foreground="{StaticResource BaseColor_Blue1}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                                <Binding Path="TimelineComponent.TimerDataModel.TimerDeta.CurrentCombatTimeSpan.Minutes" />
                                <Binding Path="TimelineComponent.TimerDataModel.TimerDeta.CurrentCombatTimeSpan.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    -->
                    <TextBlock Text=" / " Foreground="{StaticResource BaseColor_Gold1}"
                               FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}"/>
                    <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayWindowData.OverlayName}" Foreground="{StaticResource BaseColor_Blue1}"
                               FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 2 2 0" >
                    <Button Content="g" ToolTip="Close"
                            Command="{Binding OverlayViewComponent.OverlayCustomOpenCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyleKey}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayWindowData.WindowLock}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Content="r" ToolTip="Close"
                            Command="{Binding OverlayViewComponent.OverlayClosedCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyleKey}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayWindowData.WindowLock}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
            <!-- コンテンツヘッダー -->
            <Grid Grid.Row="1" Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentHeaderVisibility, Converter={StaticResource BoolToVisibility}}">
                <Border BorderThickness="0 0 0 1" BorderBrush="{StaticResource BaseColor_Gold1}">
                    <StackPanel Orientation="Horizontal">
                        <!-- T-No -->
                        <ItemsControl Grid.Column="0" Template="{StaticResource BasicTimeNoHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.TimeNoWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.TimeNoVisibility, Converter={StaticResource BoolToVisibility}}"/>
                        <!-- Time -->
                        <ItemsControl Grid.Column="1" Template="{StaticResource BasicActionTimeHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActionTimeWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActionTimeVisibility, Converter={StaticResource BoolToVisibility}}"/>
                        <!-- Type -->
                        <ItemsControl Grid.Column="2" Template="{StaticResource BasicTypeHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.TypeWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.TypeVisibility, Converter={StaticResource BoolToVisibility}}"/>
                        <!-- Job -->
                        <ItemsControl Grid.Column="3" Template="{StaticResource BasicJobHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.JobWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.JobVisibility, Converter={StaticResource BoolToVisibility}}"/>
                        <!-- Action -->
                        <ItemsControl Grid.Column="4" Template="{StaticResource BasicActionHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActionWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActionVisibility, Converter={StaticResource BoolToVisibility}}"/>
                        <!-- Active -->
                        <ItemsControl Grid.Column="5" Template="{StaticResource BasicActiveHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActiveWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActiveVisibility, Converter={StaticResource BoolToVisibility}}"/>
                        <!-- Alt -->
                        <ItemsControl Grid.Column="6" Template="{StaticResource BasicAlertHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.AlertWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.AlertVisibility, Converter={StaticResource BoolToVisibility}}"/>
                        <!-- Jump -->
                        <ItemsControl Grid.Column="7" Template="{StaticResource BasicJumpHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.JumpWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.JumpVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    </StackPanel>
                </Border>
            </Grid>
            <!-- コンテンツ -->
            <!--<ListView Grid.Row="2" ItemsSource="{Binding OverlayViewComponent.OverlayDataModel.OverlayViewData.TimelineViewSource.View}"
                      FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentFontSize}"
                      Background="Transparent" BorderBrush="Transparent"  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                      IsHitTestVisible="False" >-->
            <ListView Grid.Row="2" ItemsSource="{Binding OverlayViewComponent.OverlayDataModel.OverlayViewData.TimelineViewSource.View}"
                      FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentFontSize}"
                      Background="Transparent" BorderBrush="Transparent"  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                      IsHitTestVisible="False" 
                      ScrollViewer.CanContentScroll="True"
          ScrollViewer.IsDeferredScrollingEnabled="True"
          ScrollViewer.PanningMode="VerticalOnly"
          ScrollViewer.VerticalScrollBarVisibility="Hidden"
          VirtualizingPanel.IsVirtualizing="True">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical"
                                    CanVerticallyScroll="True"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Margin" Value="-10 -3"/>
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TimelineVisibility}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="Template" Value="{StaticResource MyScrollBar}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentScrollBarVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" Value="false">
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <!-- T-No -->
                            <ItemsControl Grid.Column="0" Template="{StaticResource BasicTimeNoContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.TimeNoWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.TimeNoVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                            <!-- Time -->
                            <ItemsControl Grid.Column="1" Template="{StaticResource BasicActionTimeContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActionTimeWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActionTimeVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                            <!-- Type -->
                            <ItemsControl Grid.Column="2" Template="{StaticResource BasicTypeContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.TypeWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.TypeVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                            <!-- Job -->
                            <ItemsControl Grid.Column="3" Template="{StaticResource BasicJobContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.JobWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.JobVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                            <!-- Action -->
                            <ItemsControl Grid.Column="4" Template="{StaticResource BasicActionContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActionWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActionVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                            <!-- Active -->
                            <ItemsControl Grid.Column="5" Template="{StaticResource BasicActiveContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActiveWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActiveVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                            <!-- Alt -->
                            <ItemsControl Grid.Column="6" Template="{StaticResource BasicAlertContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.AlertWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.AlertVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                            <!-- Jump -->
                            <ItemsControl Grid.Column="7" Template="{StaticResource BasicJumpContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.JumpWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.JumpVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                        </StackPanel>

                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

        </StackPanel>
    </Grid>
</UserControl>
