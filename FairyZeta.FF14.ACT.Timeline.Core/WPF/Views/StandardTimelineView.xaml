<UserControl x:Class="FairyZeta.FF14.ACT.Timeline.Core.WPF.Views.StandardTimelineView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:custom="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Custom"
             xmlns:dData="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Desing"
             xmlns:fControl="clr-namespace:FairyZeta.Framework.Controls;assembly=FairyZeta.Framework"
             xmlns:converter="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800" 
             d:DataContext="{d:DesignInstance Type=dData:Desing_BaseWindowViewModel, IsDesignTimeCreatable=True}">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Style/StandardTimelineStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <converter:OpacityConverter x:Key="opacityConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
            
            <Style x:Key="HeaderText" TargetType="{x:Type TextBlock}"/>
            <Style x:Key="HeaderSplitter" TargetType="{x:Type GridSplitter}">
                <Setter Property="Width" Value="1"/>
            </Style>
            <Style x:Key="ContentSplitter" TargetType="{x:Type GridSplitter}">
            </Style>
            
            <ControlTemplate x:Key="BasicTimeNoHeaderTemplate" >
                <Grid>
                    <TextBlock Text="T-No" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActionTimeHeaderTemplate" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Time" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicAlertHeaderTemplate" >
                <Grid>
                    <TextBlock Text="Alt" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActionHeaderTemplate" >
                <Grid Margin="20 0 0 0">
                    <TextBlock Text="Action" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActiveHeaderTemplate" >
                <Grid>
                    <TextBlock Text="Active" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicTypeHeaderTemplate" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Type" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicJobHeaderTemplate" >
                <Grid>
                    <TextBlock Text="Job" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicJumpHeaderTemplate" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Jump" Grid.Column="1" Foreground="{StaticResource BaseColor_Gold1}" VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>

            <!-- コンテンツ -->
            <ControlTemplate x:Key="BasicTimeNoContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Text="{Binding ActivityNo}" Style="{StaticResource OutlineTextBlock}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <!--Label Style="{StaticResource TimilineItemTextStyle}" Text="{Binding ActivityNo}" HorizontalAlignment="Center"/-->
                    <!--ContentStringFormat="{}{0:#0.0}"  -->
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActionTimeContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Style="{StaticResource OutlineTextBlock}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                                <Binding Path="ActivityTimeSpan.Minutes" />
                                <Binding Path="ActivityTimeSpan.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicAlertContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Text="♪" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource OutlineTextBlock}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActivityAlert}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActionContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}" Margin="10 0 0 0">
                    <TextBlock Text="{Binding ActivityName}" Style="{StaticResource OutlineTextBlock}"  VerticalAlignment="Center" />
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicActiveContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <ProgressBar Minimum="{Binding ActiveIndicatorMinValue}" 
                                 Value="{Binding DataContext.TimelineComponent.TimerDataModel.TimerDeta.CurrentCombatTime, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" 
                                 Maximum="{Binding ActiveIndicatorMaxValue}" 
                                 Margin="0 0 35 0"
                                 Template="{StaticResource BasicProgressBar}" FlowDirection="RightToLeft" Background="Transparent" BorderBrush="Transparent" >
                        <ProgressBar.Style>
                            <Style TargetType="ProgressBar">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActiveIndicatorVisibility}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ActiveIndicatorValue}" Value="4">
                                        <Setter Property="Foreground" Value="Orange"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ActiveIndicatorValue}" Value="8">
                                        <Setter Property="Foreground" Value="Red"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ProgressBar.Style>
                    </ProgressBar>
                    <ProgressBar Minimum="{Binding ActivityNo}" 
                                 Value="{Binding DataContext.TimelineComponent.TimerDataModel.TimerDeta.CurrentCombatTime, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}"
                                 Maximum="{Binding DurationIndicatorMaxValue}" 
                                 Margin="0 0 35 0"
                                 Template="{StaticResource BasicProgressBar}" Background="Transparent" BorderBrush="Transparent">
                        <ProgressBar.Style>
                            <Style TargetType="ProgressBar">
                                <Style.Triggers>
                                </Style.Triggers>
                            </Style>
                        </ProgressBar.Style>
                    </ProgressBar>
                    <TextBlock Text="{Binding ActiveTime,StringFormat=N2}" Style="{StaticResource OutlineTextBlock}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicTypeContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Style="{StaticResource OutlineTextBlock}" Text="{Binding TimelineType}" HorizontalAlignment="Right"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicJobContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                    <TextBlock Style="{StaticResource OutlineTextBlock}" Text="{Binding JobType}" HorizontalAlignment="Right"/>
                </Grid>
            </ControlTemplate>
            <ControlTemplate x:Key="BasicJumpContentTemplate" >
                <Grid Style="{StaticResource BasicCellGrid}">
                </Grid>
            </ControlTemplate>
            
        </ResourceDictionary>
        
        
    </UserControl.Resources>

    
    <Grid >
        <Grid.Resources>
            <FrameworkElement x:Key="proxyElement" />
        </Grid.Resources>
        <ContentControl Visibility="Collapsed" Content="{StaticResource proxyElement}" />
        <Border Background="Black" Opacity="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.BackgroundOpacity, Converter={StaticResource opacityConverter}}" CornerRadius="5"/>
        <StackPanel Opacity="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentOpacity, Converter={StaticResource opacityConverter}}">
            <!-- ウィンドウヘッダー -->
            <Grid Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarVisibility, Converter={StaticResource BoolToVisibility}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition  Width="30"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal" Margin="5 2">
                    <TextBlock Text="[Line-Time] " Foreground="{StaticResource BaseColor_Gold1}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}"/>
                    <TextBlock Foreground="{StaticResource BaseColor_Blue1}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0:00}:{1:00;00}">
                                <Binding Path="TimelineComponent.TimerDataModel.TimerDeta.CurrentCombatTimeSpan.Minutes" />
                                <Binding Path="TimelineComponent.TimerDataModel.TimerDeta.CurrentCombatTimeSpan.Seconds" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock Text=" / " Foreground="{StaticResource BaseColor_Gold1}"
                               FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}"/>
                    <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayWindowData.OverlayName}" Foreground="{StaticResource BaseColor_Blue1}"
                               FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize}"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" >
                    <Button Content="r" ToolTip="Close"
                            Command="{Binding OverlayViewComponent.OverlayClosedCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyleKey}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayWindowData.WindowLock}" Value="True">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </Grid>
            <!-- コンテンツヘッダー -->
            <Grid Grid.Row="1" Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentHeaderVisibility, Converter={StaticResource BoolToVisibility}}">
                <Border BorderThickness="0 0 0 1" BorderBrush="{StaticResource BaseColor_Gold1}">
                    <StackPanel Orientation="Horizontal">
                    <!-- T-No -->
                    <ItemsControl Grid.Column="0" Template="{StaticResource BasicTimeNoHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.TimeNoWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.TimeNoVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    <!-- Time -->
                    <ItemsControl Grid.Column="1" Template="{StaticResource BasicActionTimeHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActionTimeWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActionTimeVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    <!-- Type -->
                    <ItemsControl Grid.Column="2" Template="{StaticResource BasicTypeHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.TypeWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.TypeVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    <!-- Job -->
                    <ItemsControl Grid.Column="3" Template="{StaticResource BasicJobHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.JobWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.JobVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    <!-- Action -->
                    <ItemsControl Grid.Column="4" Template="{StaticResource BasicActionHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActionWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActionVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    <!-- Active -->
                    <ItemsControl Grid.Column="5" Template="{StaticResource BasicActiveHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActiveWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActiveVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    <!-- Alt -->
                    <ItemsControl Grid.Column="6" Template="{StaticResource BasicAlertHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.AlertWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.AlertVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    <!-- Jump -->
                    <ItemsControl Grid.Column="7" Template="{StaticResource BasicJumpHeaderTemplate}"
                                  FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize}"
                                  Width="{Binding OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.JumpWidth}" 
                                  Visibility="{Binding OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.JumpVisibility, Converter={StaticResource BoolToVisibility}}"/>
                    </StackPanel>
                </Border>
            </Grid>
            <!-- コンテンツ -->
            <ListView Grid.Row="2" ItemsSource="{Binding OverlayViewComponent.OverlayDataModel.OverlayViewData.TimelineViewSource.View}"
                      FontSize="{Binding OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentFontSize}"
                      Background="Transparent" BorderBrush="Transparent"  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                      IsHitTestVisible="False">
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Margin" Value="-10 -3"/>
                        <Setter Property="Background" Value="Transparent" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TimelineVisibility}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="{x:Type ScrollBar}">
                        <Setter Property="Template" Value="{StaticResource MyScrollBar}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayGenericSettingsData.ContentScrollBarVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}" Value="false">
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <!-- T-No -->
                                <ItemsControl Grid.Column="0" Template="{StaticResource BasicTimeNoContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.TimeNoWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.TimeNoVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                                <!-- Time -->
                                <ItemsControl Grid.Column="1" Template="{StaticResource BasicActionTimeContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActionTimeWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActionTimeVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                                <!-- Type -->
                                <ItemsControl Grid.Column="2" Template="{StaticResource BasicTypeContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.TypeWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.TypeVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                                <!-- Job -->
                                <ItemsControl Grid.Column="3" Template="{StaticResource BasicJobContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.JobWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.JobVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                                <!-- Action -->
                                <ItemsControl Grid.Column="4" Template="{StaticResource BasicActionContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActionWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActionVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                                <!-- Active -->
                                <ItemsControl Grid.Column="5" Template="{StaticResource BasicActiveContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.ActiveWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.ActiveVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                                <!-- Alt -->
                                <ItemsControl Grid.Column="6" Template="{StaticResource BasicAlertContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.AlertWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.AlertVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                                <!-- Jump -->
                                <ItemsControl Grid.Column="7" Template="{StaticResource BasicJumpContentTemplate}"
                                              Width="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayContentSettingsData.JumpWidth, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}}" 
                                              Visibility="{Binding DataContext.OverlayViewComponent.OverlayDataModel.OverlayItemVisibilitySettingsData.JumpVisibility, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListView}, Converter={StaticResource BoolToVisibility}}"/>
                            </StackPanel>
                        
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            
        </StackPanel>
    </Grid>
</UserControl>
