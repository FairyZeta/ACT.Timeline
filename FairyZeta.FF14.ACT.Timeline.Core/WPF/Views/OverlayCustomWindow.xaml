<Window x:Class="FairyZeta.FF14.ACT.Timeline.Core.WPF.Views.OverlayCustomWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:vm="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.ViewModels"
        xmlns:view="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Views"
        xmlns:dvm="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Desing"
        xmlns:behavior="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Behavior"
        mc:Ignorable="d" 
        Height="640" Width="1100" 
        MinHeight="630" MinWidth="500" 
        d:DesignHeight="630" d:DesignWidth="900" 
        Background="Transparent" AllowsTransparency="True" WindowStyle="None"
        behavior:WindowCloseAttachedBehavior.Close="{Binding OverlayViewComponent.OverlayDataModel.OverlayViewData.OverlayCustomClosed}"
        Style="{DynamicResource DefaultWindowStyle}"
             d:DataContext="{d:DesignInstance Type=dvm:Desing_OverlayCustomWindowViewModel, IsDesignTimeCreatable=True}">
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseEventCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../TemplateStyle/_TimelineStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
                        
            <Style x:Key="BasicTabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="Width" Value="100" />
            </Style>
        </ResourceDictionary>
        
    </Window.Resources>
    
    <Window.DataContext>
        <vm:OverlayCustomWindowViewModel />
    </Window.DataContext>
    
    <Border Background="White" CornerRadius="5" BorderBrush="Gray" BorderThickness="1">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <StackPanel>
                <Label Content="- Overlay Custom -"/>
            </StackPanel>
            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 2 2 0" >
                <Button Content="r" ToolTip="Close" Foreground="Black"
                        Command="{Binding OverlayViewComponent.OverlayCustomClosedCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CaptionButtonStyleKey}">
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
            <TabControl Grid.Row="1" TabStripPlacement="Left" >
                <TabItem Header="Generic" Style="{StaticResource BasicTabItemStyle}">
                    <view:OverlayGenericCustomView />
                </TabItem>
                <TabItem Header="Filter" Style="{StaticResource BasicTabItemStyle}">
                    <view:OverlayFilterCustomView />
                </TabItem>
                <TabItem Header="View" Style="{StaticResource BasicTabItemStyle}">
                    <view:OverlayStandardTimelineCustomView />
                </TabItem>
            </TabControl>
            <StackPanel Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5 20">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Margin" Value="5 2"/>
                        <Setter Property="Width" Value="80"/>
                    </Style>
                </StackPanel.Resources>
                
                <ToggleButton Content="Lock" IsChecked="{Binding OverlayViewComponent.OverlayDataModel.OverlayWindowData.WindowLock, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             Command="{Binding OverlayViewComponent.OverlayViewLockCommand}"/>
            </StackPanel>
        </Grid>
    </Border>
    
</Window>
