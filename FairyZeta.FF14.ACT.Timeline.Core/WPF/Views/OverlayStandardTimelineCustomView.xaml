<UserControl x:Class="FairyZeta.FF14.ACT.Timeline.Core.WPF.Views.OverlayStandardTimelineCustomView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fCtrl="clr-namespace:FairyZeta.Framework.WPF.Controls;assembly=FairyZeta.Framework"
             xmlns:fConv="clr-namespace:FairyZeta.Framework.WPF.Converters;assembly=FairyZeta.Framework"
             xmlns:view="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Views"
             xmlns:dData="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Desing"
             xmlns:enum="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core"
             xmlns:Conv="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Converter"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="900"
             d:DataContext="{d:DesignInstance Type=dData:Desing_OverlayCustomWindowViewModel, IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../TemplateStyle/StandardTimelineResource.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <fConv:ColorToSolidColorBrushConverter x:Key="Color2SBrush"/>
            <Conv:OpacityConverter x:Key="OpacityConverter"/>

            <Style x:Key="DataGridWidthTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Width" Value="50"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
            <Style x:Key="DataGridCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Width" Value="100"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="ItemStackPanel" TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="Margin" Value="0 2 0 2"/>
            </Style>
            
            <Style x:Key="JobFilterTitleLabel" TargetType="{x:Type Label}">
            </Style>

            <Style x:Key="TypeFilterCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Width" Value="140"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="10 2"/>
            </Style>

            <Style x:Key="TankModeFilterCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Width" Value="70"/>
            </Style>

            <!-- Common.Window -->
            <DataTemplate x:Key="DT_Common_OverlayWindow">
                <Border>
                    <Border.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Width" Value="100"/>
                            <Setter Property="Margin" Value="5 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="80"/>
                        </Style>
                    </Border.Resources>
                    <Grid Margin="5 0">
                        <StackPanel Margin="0 5" DataContext="{Binding OverlayViewComponent}">
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Window X"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayWindowData.WindowTop, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Window Y"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayWindowData.WindowLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Overlay Height"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayWindowData.WindowHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="2">
                                <TextBlock Text="Overlay Width"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayWindowData.WindowWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>

            </DataTemplate>
            <!-- Common.Opacity -->
            <DataTemplate x:Key="DT_Common_OverlayOpacity" >
                <Border>
                    <Border.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Width" Value="100"/>
                            <Setter Property="Margin" Value="5 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:IntUpDownControl}">
                            <Setter Property="Width" Value="80"/>
                        </Style>
                        <Style TargetType="{x:Type Slider}">
                            <Setter Property="Margin" Value="10 0"/>
                        </Style>
                    </Border.Resources>
                    <Grid Margin="5 0">
                        <StackPanel Margin="0 5" DataContext="{Binding OverlayViewComponent}">
                            <StackPanel Orientation="Horizontal" Margin="0 3">
                                <TextBlock Text="Background"/>
                                <fCtrl:IntUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundOpacity}"
                                                                MinValue="0" MaxValue="100"/>
                                <Slider Width="200" Minimum="0" Maximum="100"
                                                Value="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundOpacity}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 3">
                                <TextBlock Text="Content"/>
                                <fCtrl:IntUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.ContentOpacity}"
                                                                MinValue="0" MaxValue="100"/>
                                <Slider Width="200" Minimum="0" Maximum="100"
                                                               Value="{Binding OverlayDataModel.OverlayGenericSettingsData.ContentOpacity}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Border>
            </DataTemplate>
            <!-- Common.Visibility -->
            <DataTemplate x:Key="DT_Common_OverlayVisibility">
                <Border>
                    <Grid Margin="5 0">
                        <StackPanel Margin="0 10" DataContext="{Binding OverlayViewComponent}">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Column="0" Content="TitleBar Visibility" 
                                                  IsChecked="{Binding OverlayDataModel.OverlayGenericSettingsData.TitleBarVisibility}"/>
                            </Grid>
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Column="0" Content="ContentHeader Visibility" 
                                                  IsChecked="{Binding OverlayDataModel.OverlayGenericSettingsData.ContentHeaderVisibility}"/>
                            </Grid>
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </Border>
            </DataTemplate>
            <!-- Common.Background -->
            <DataTemplate x:Key="DT_Common_Background">
                <Border>
                    <Border.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Width" Value="100"/>
                            <Setter Property="Margin" Value="5 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <Grid Margin="5 0">
                        <StackPanel Margin="0 10" DataContext="{Binding OverlayViewComponent}">
                            <StackPanel Orientation="Horizontal" Margin="0 3">
                                <Label Content=" EffectType " Width="100"/>
                                <ComboBox Width="160"
                                          ItemsSource="{Binding OverlayDataModel.OverlayGenericSettingsData.EffectTypeCollection}"
                                          SelectedItem="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundEffectType}"/>
                            </StackPanel>
                            <ContentControl>
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundEffectType}" Value="{x:Static enum:EffectType.Blur}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0 3">
                                        <Label Content=" KernelType " Width="100"/>
                                        <ComboBox Width="160"
                                                          ItemsSource="{Binding OverlayDataModel.OverlayGenericSettingsData.KernelTypeCollection}"
                                                          SelectedItem="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundEffectKernelType}"/>

                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0 3">
                                        <Label Content=" EffectLevel " Width="100"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundBlurRadius, Mode=TwoWay}"
                                                                           MinValue="0" />
                                        <Slider Width="200" Minimum="0" Maximum="100" VerticalAlignment="Center" Margin="10 0"
                                                        Value="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundBlurRadius}"/>
                                    </StackPanel>
                                </StackPanel>
                            </ContentControl>
                            <ContentControl>
                                <ContentControl.Style>
                                    <Style TargetType="{x:Type ContentControl}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundEffectType}" Value="{x:Static enum:EffectType.DropShadow}">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentControl.Style>
                                <StackPanel>
                                    <Label FontWeight="Bold" Foreground="Red" Content=" DropShadow Settings => Color Tab."/>
                                </StackPanel>
                            </ContentControl>
                            <StackPanel>
                                <Label Content=" Corner Radius "/>
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Style="{StaticResource ItemStackPanel}">
                                        <Label Content="T-Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundCornerRadius_TopLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                            MinValue="0"/>
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource ItemStackPanel}">
                                        <Label Content="T-Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundCornerRadius_TopRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                            MinValue="0"/>
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource ItemStackPanel}">
                                        <Label Content="B-Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundCornerRadius_BottomRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                            MinValue="0"/>
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource ItemStackPanel}">
                                        <Label Content="B-Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundCornerRadius_BottomLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                            MinValue="0"/>
                                    </StackPanel>
                                </StackPanel>
                                <Label Content=" Margin "/>
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Style="{StaticResource ItemStackPanel}">
                                        <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource ItemStackPanel}">
                                        <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource ItemStackPanel}">
                                        <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                    <StackPanel Style="{StaticResource ItemStackPanel}">
                                        <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                        <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>

                        </StackPanel>
                    </Grid>
                </Border>
            </DataTemplate>

            <!-- Content.ContentWidth -->
            <DataTemplate x:Key="DT_Content_ContentWidth">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel Margin="0 10" DataContext="{Binding OverlayViewComponent}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" Content="T-No" Style="{StaticResource DataGridCheckBoxStyle}" IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.TimeNoVisibility}"/>
                            <TextBox Grid.Column="1" Margin="2 0" Text="{Binding OverlayDataModel.OverlayHeaderNameSettings.TimeNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <fCtrl:DoubleUpDownControl Grid.Column="2" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.TimeNoWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            
                            <Slider Grid.Column="4" Value="{Binding OverlayDataModel.OverlayContentSettingsData.TimeNoWidth}" Minimum="0" Maximum="150"/>
                            <TextBlock Grid.Column="5" Text="150" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" Content="Time" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.ActionTimeVisibility}"/>
                            <TextBox Grid.Column="1" Margin="2 0" Text="{Binding OverlayDataModel.OverlayHeaderNameSettings.ActionTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <fCtrl:DoubleUpDownControl Grid.Column="2" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.ActionTimeWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            
                            <Slider Grid.Column="4" Value="{Binding OverlayDataModel.OverlayContentSettingsData.ActionTimeWidth}" Minimum="0" Maximum="150"/>
                            <TextBlock Grid.Column="5" Text="150" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" Content="Type" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.TypeVisibility}"/>
                            <TextBox Grid.Column="1" Margin="2 0" Text="{Binding OverlayDataModel.OverlayHeaderNameSettings.Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <fCtrl:DoubleUpDownControl Grid.Column="2" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.TypeWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            <Slider Grid.Column="4" Value="{Binding OverlayDataModel.OverlayContentSettingsData.TypeWidth}" Minimum="0" Maximum="210"/>
                            <TextBlock Grid.Column="5" Text="210" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" Content="Job" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.JobVisibility}"/>
                            <TextBox Grid.Column="1" Margin="2 0" Text="{Binding OverlayDataModel.OverlayHeaderNameSettings.Job, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <fCtrl:DoubleUpDownControl Grid.Column="2" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.JobWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            <Slider Grid.Column="4" Value="{Binding OverlayDataModel.OverlayContentSettingsData.JobWidth}" Minimum="0" Maximum="210"/>
                            <TextBlock Grid.Column="5" Text="210" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Content="Action" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.ActionVisibility}"/>
                            <TextBox Grid.Column="1" Margin="2 0" Text="{Binding OverlayDataModel.OverlayHeaderNameSettings.Action, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <fCtrl:DoubleUpDownControl Grid.Column="2" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.ActionWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            <Slider Grid.Column="4" Value="{Binding OverlayDataModel.OverlayContentSettingsData.ActionWidth}" Minimum="0" Maximum="600"/>
                            <TextBlock Grid.Column="5" Text="600" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" Content="Active" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.ActiveVisibility}"/>
                            <TextBox Grid.Column="1" Margin="2 0" Text="{Binding OverlayDataModel.OverlayHeaderNameSettings.Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <fCtrl:DoubleUpDownControl Grid.Column="2" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.ActiveWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            <Slider Grid.Column="4" Value="{Binding OverlayDataModel.OverlayContentSettingsData.ActiveWidth}" Minimum="0" Maximum="600" SmallChange="1" TickFrequency="1" />
                            <TextBlock Grid.Column="5" Text="600" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" Content="Alert" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.AlertVisibility}"/>
                            <TextBox Grid.Column="1" Margin="2 0" Text="{Binding OverlayDataModel.OverlayHeaderNameSettings.Alert, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <fCtrl:DoubleUpDownControl Grid.Column="2" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.AlertWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            <Slider Grid.Column="4" Value="{Binding OverlayDataModel.OverlayContentSettingsData.AlertWidth}" Minimum="0" Maximum="60"/>
                            <TextBlock Grid.Column="5" Text="60" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" Content="Anc" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.JumpVisibility}"/>
                            <TextBox Grid.Column="1" Margin="2 0" Text="{Binding OverlayDataModel.OverlayHeaderNameSettings.Anc, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <fCtrl:DoubleUpDownControl Grid.Column="2" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.JumpWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            <Slider Grid.Column="4" Value="{Binding OverlayDataModel.OverlayContentSettingsData.JumpWidth}" Minimum="0" Maximum="60"/>
                            <TextBlock Grid.Column="5" Text="60" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </StackPanel>
                </Border>

            </DataTemplate>
            <!-- Content.ContentMinHeight -->
            <DataTemplate x:Key="DT_Content_ContentMinHeight">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel Margin="0 10" DataContext="{Binding OverlayViewComponent}">
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="TitleBar" />
                            <fCtrl:DoubleUpDownControl Grid.Column="1" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.TitleBarMinHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                               MinValue="0"/>
                            <Slider Grid.Column="3" Value="{Binding OverlayDataModel.OverlayContentSettingsData.TitleBarMinHeight}" Minimum="0" Maximum="100"/>
                            <TextBlock Grid.Column="4" Text="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Header" />
                            <fCtrl:DoubleUpDownControl Grid.Column="1" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.HeaderMinHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                               MinValue="0"/>
                            <Slider Grid.Column="3" Value="{Binding OverlayDataModel.OverlayContentSettingsData.HeaderMinHeight}" Minimum="0" Maximum="100"/>
                            <TextBlock Grid.Column="4" Text="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="15"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="Content" />
                            <fCtrl:DoubleUpDownControl Grid.Column="1" ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.ContentMinHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                               MinValue="0"/>
                            <Slider Grid.Column="3" Value="{Binding OverlayDataModel.OverlayContentSettingsData.ContentMinHeight}" Minimum="0" Maximum="100"/>
                            <TextBlock Grid.Column="4" Text="100" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                    </StackPanel>
                </Border>
            </DataTemplate>

            <!-- Font.TitleFont -->
            <DataTemplate x:Key="DT_Font_TitleFont">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel Margin="0 5" DataContext="{Binding OverlayViewComponent}">
                        <StackPanel Orientation="Horizontal">
                                <Button Content="Edit" VerticalContentAlignment="Center"
                                        Command="{Binding FontEditCommand}"
                                        CommandParameter="{x:Static enum:FontEditTarget.TitleBar}"/>
                                <TextBlock Text="Base Font" Width="60" Margin="10 0"/>
                                <TextBlock Text="Size: "/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.FontData.TitleBar_BaseFontInfo.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text=" - " Margin="0 0 0 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.TitleBar_BaseFontInfo.FamilyName}"/>
                                <TextBlock Text=" - " Margin="0 0 0 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.TitleBar_BaseFontInfo.Stretch}"/>
                                <TextBlock Text="," Margin="0 0 5 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.TitleBar_BaseFontInfo.Weight}"/>
                                <TextBlock Text="," Margin="0 0 5 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.TitleBar_BaseFontInfo.Style}"/>
                            </StackPanel>
                    </StackPanel>

                </Border>

            </DataTemplate>
            <!-- Font.HeaderFont -->
            <DataTemplate x:Key="DT_Font_HeaderFont">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel Margin="0 5" DataContext="{Binding OverlayViewComponent}">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Edit" VerticalContentAlignment="Center"
                                        Command="{Binding FontEditCommand}"
                                        CommandParameter="{x:Static enum:FontEditTarget.Header}"/>
                                <TextBlock Text="Base Font" Width="60" Margin="10 0"/>
                                <TextBlock Text="Size: "/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.FontData.Header_BaseFontInfo.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text=" - " Margin="0 0 0 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Header_BaseFontInfo.FamilyName}"/>
                                <TextBlock Text=" - " Margin="0 0 0 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Header_BaseFontInfo.Stretch}"/>
                                <TextBlock Text="," Margin="0 0 5 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Header_BaseFontInfo.Weight}"/>
                                <TextBlock Text="," Margin="0 0 5 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Header_BaseFontInfo.Style}"/>
                            </StackPanel>
                    </StackPanel>
                </Border>
            </DataTemplate>
            <!-- Font.ContentFont -->
            <DataTemplate x:Key="DT_Font_ContentFont">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel Margin="0 5" DataContext="{Binding OverlayViewComponent}">
                        <StackPanel Margin="0 5">
                            <StackPanel Orientation="Horizontal">
                                <Button Content="Edit" VerticalContentAlignment="Center"
                                        Command="{Binding FontEditCommand}"
                                        CommandParameter="{x:Static enum:FontEditTarget.Content}"/>
                                <TextBlock Text="Base Font" Width="60" Margin="10 0"/>
                                <TextBlock Text="Size: "/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.FontData.Content_BaseFontInfo.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text=" - " Margin="0 0 0 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Content_BaseFontInfo.FamilyName}"/>
                                <TextBlock Text=" - " Margin="0 0 0 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Content_BaseFontInfo.Stretch}"/>
                                <TextBlock Text="," Margin="0 0 5 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Content_BaseFontInfo.Weight}"/>
                                <TextBlock Text="," Margin="0 0 5 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Content_BaseFontInfo.Style}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                                <Button Content="Edit" VerticalContentAlignment="Center"
                                        Command="{Binding FontEditCommand}"
                                        CommandParameter="{x:Static enum:FontEditTarget.Active}"/>
                                <TextBlock Text="Active" Width="60" Margin="10 0"/>
                                <TextBlock Text="Size: "/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.FontData.Content_ActiveFontInfo.Size, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text=" - " Margin="0 0 0 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Content_ActiveFontInfo.FamilyName}"/>
                                <TextBlock Text=" - " Margin="0 0 0 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Content_ActiveFontInfo.Stretch}"/>
                                <TextBlock Text="," Margin="0 0 5 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Content_ActiveFontInfo.Weight}"/>
                                <TextBlock Text="," Margin="0 0 5 0"/>
                                <TextBlock Text="{Binding OverlayDataModel.FontData.Content_ActiveFontInfo.Style}"/>
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Margin="10">
                            <Label Content=" * Attention *" Height="20" Padding="3 0" Background="White" Margin="0 0 0 0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <TextBlock Text="Activeは、処理の重さやメモリの消費量に大きく影響する為、慎重に選んで下さい。"/>
                            <TextBlock Text="具体的には、エイリアスのかかっていないフォントの選択をおすすめします。"/>
                            <TextBlock Text="N0設定(小数点0桁表示)では、あまり気にせず好きなものを選択して問題ありません。"/>
                        </StackPanel>
                    </StackPanel>

                </Border>

            </DataTemplate>

            <!-- Color.Resource -->
            <ResourceDictionary x:Key="DT_Color_Resource">
                <Style TargetType="Button">
                    <Setter Property="Width" Value="50" />
                    <Setter Property="Margin" Value="2 2"/>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Width" Value="180"/>
                    <Setter Property="Margin" Value="5 0 0 0"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </ResourceDictionary>
            <!-- Color.BaseColor.MenuMain -->
            <DataTemplate x:Key="DT_Color_BaseColor_MenuMain">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.MenuMain_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.MenuMain_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.MenuMain_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.MenuMain_Shadow}"/>
            </DataTemplate>
            <!-- Color.BaseColor.MenuSub -->
            <DataTemplate x:Key="DT_Color_BaseColor_MenuSub">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.MenuSub_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.MenuSub_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.MenuSub_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.MenuSub_Shadow}"/>
            </DataTemplate>
            <!-- Color.BaseColor.Background -->
            <DataTemplate x:Key="DT_Color_BaseColor_Background">
                <Grid>
                    <view:ShadowSettingsCustomView
                        ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                        ShadowSettingsData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.Background_ShadowSettingsData, Mode=TwoWay}"
                        BaseEditParam="{x:Static enum:ColorEditTarget.Background_Base}"
                        ShadowEditParam="{x:Static enum:ColorEditTarget.Background_Shadow}"/>
                </Grid>
            </DataTemplate>
            
            <!-- Color.TimelineColor.HeaderText -->
            <DataTemplate x:Key="DT_Color_TimelineColor_HeaderText">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.HeaderText_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.HeaderText_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.HeaderText_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.HeaderText_Shadow}"/>
            </DataTemplate>
            <!-- Color.TimelineColor.HeaderBar -->
            <DataTemplate x:Key="DT_Color_TimelineColor_HeaderBar">
                <view:ShadowSettingsCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    ShadowSettingsData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.HeaderBar_ShadowSettingsData, Mode=TwoWay}"
                    BaseEditParam="{x:Static enum:ColorEditTarget.HeaderBar_Base}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.HeaderBar_Shadow}"/>
            </DataTemplate>
            
            <!-- Color.TimelineColor.TypeColorUNKNOWN -->
            <DataTemplate x:Key="DT_Color_TimelineColor_TypeColorUNKNOWN">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.UNKNOWN_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.TypeColorUNKNOWN_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.TypeColorUNKNOWN_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.TypeColorUNKNOWN_Shadow}"/>
            </DataTemplate>
            <!-- Color.TimelineColor.TypeColorENEMY -->
            <DataTemplate x:Key="DT_Color_TimelineColor_TypeColorENEMY">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.ENEMY_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.TypeColorENEMY_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.TypeColorENEMY_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.TypeColorENEMY_Shadow}"/>
            </DataTemplate>
            <!-- Color.TimelineColor.TypeColorTANK -->
            <DataTemplate x:Key="DT_Color_TimelineColor_TypeColorTANK">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.TANK_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.TypeColorTANK_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.TypeColorTANK_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.TypeColorTANK_Shadow}"/>
            </DataTemplate>
            <!-- Color.TimelineColor.TypeColorDPS -->
            <DataTemplate x:Key="DT_Color_TimelineColor_TypeColorDPS">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.DPS_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.TypeColorDPS_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.TypeColorDPS_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.TypeColorDPS_Shadow}"/>
            </DataTemplate>
            <!-- Color.TimelineColor.TypeColorHEALER -->
            <DataTemplate x:Key="DT_Color_TimelineColor_TypeColorHEALER">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.HEALER_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.TypeColorHEALER_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.TypeColorHEALER_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.TypeColorHEALER_Shadow}"/>
            </DataTemplate>
            <!-- Color.TimelineColor.TypeColorPET -->
            <DataTemplate x:Key="DT_Color_TimelineColor_TypeColorPET">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.PET_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.TypeColorPET_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.TypeColorPET_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.TypeColorPET_Shadow}"/>
            </DataTemplate>
            <!-- Color.TimelineColor.TypeColorGIMMICK -->
            <DataTemplate x:Key="DT_Color_TimelineColor_TypeColorGIMMICK">
                <view:OutlineTextCustomView
                    ColorEditCommand="{Binding OverlayViewComponent.ColorEditCommand}"
                    OutlineTextData="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.GIMMICK_OutlineTextData, Mode=TwoWay}"
                    InnerEditParam="{x:Static enum:ColorEditTarget.TypeColorGIMMICK_Base}"
                    OutlineEditParam="{x:Static enum:ColorEditTarget.TypeColorGIMMICK_Outline}"
                    ShadowEditParam="{x:Static enum:ColorEditTarget.TypeColorGIMMICK_Shadow}"/>
            </DataTemplate>

            <!-- ActiveBar.BaseSettings -->
            <DataTemplate x:Key="DT_ActiveBar_BaseSettings">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel DataContext="{Binding OverlayViewComponent}">
                        <StackPanel Orientation="Horizontal">
                            <Label Content=" Bar Type " Width="180"/>
                            <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.BarFormTypeCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.BarFormType}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 5">
                            <Label Content=" Bar Active Time " Width="180"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarActiveTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>

                        <Label Content=" Bar Margin " />
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>

                        <Label Content=" Bar Inner Margin "/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarInnerMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarInnerMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarInnerMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarInnerMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>

                        <Label Content=" Corner Radius "/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="T-Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl MinValue="0" ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.CornerRadius_TopLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="T-Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl MinValue="0" ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.CornerRadius_TopRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="B-Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl MinValue="0" ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.CornerRadius_BottomRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="B-Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl MinValue="0" ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.CornerRadius_BottomLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>

                        <Label Content=" Border Thickness "/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BorderThickness_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BorderThickness_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BorderThickness_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BorderThickness_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Label Content=" Inner HorizontalAlignment " Width="180" Margin="0 2"/>
                            <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.BarHorizontalAlignmentCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.BarHorizontalAlignment}"/>
                        </StackPanel>

                    </StackPanel>
                </Border>
            </DataTemplate>
            <!-- ActiveBar.TextSettings(Common) -->
            <DataTemplate x:Key="DT_ActiveBar_TextSettings">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="60"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel DataContext="{Binding OverlayViewComponent}">
                        <StackPanel Orientation="Horizontal">
                            <Label Content=" Text HorizontalAlignment " Width="180" Margin="0 2"/>
                            <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.TextHorizontalAlignmentCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.TextHorizontalAlignment}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content=" Text VerticalAlignment " Width="180" Margin="0 2"/>
                            <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.TextVerticalAlignmentCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.TextVerticalAlignment}"/>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Label Content=" Text Double Style " Width="180" Margin="0 2"/>
                            <ComboBox Height="24" Width="120" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.DoubleStyleCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.DoubleVisibilityStyle}"/>
                            <Label Content=" (N0 =軽い, N2=かなり重い) " Margin="0 2"/>
                        </StackPanel>

                    </StackPanel>
                </Border>
            </DataTemplate>
            <!-- ActiveBar.ColorSettings -->
            <DataTemplate x:Key="DT_ActiveBar_ColorSettings">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="60"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel DataContext="{Binding OverlayViewComponent}">
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarBorder_Base}"/>
                            <TextBlock Text=" Border Color "/>
                            <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BorderColor}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BorderColor, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarBackgroung_Base}"/>
                            <TextBlock Text=" Background Color "/>
                            <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BackgroundColor}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BackgroundColor, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor1_Base}"/>
                            <TextBlock Text=" Bar Color (1) "/>
                            <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor1_Base}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor1_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor2_Base}"/>
                            <TextBlock Text=" Bar Color (2) "/>
                            <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor2_Base}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor2_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor3_Base}"/>
                            <TextBlock Text=" Bar Color (3) "/>
                            <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor3_Base}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor3_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </DataTemplate>
            <!-- ActiveBar.Gradient -->
            <DataTemplate x:Key="DT_ActiveBar_Gradient">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="60"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 3">
                            <TextBlock Text="Color1~2 Gradient Start Time"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.GradientStop1StartTime}" MinValue="0" UpValue="0.1" DownValue="-0.1"/>
                            <Slider Margin="10 0" Width="200" Minimum="0" Maximum="60" Value="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.GradientStop1StartTime}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 3">
                            <TextBlock Text="Color1~2 Gradient End Time"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.GradientStop1EndTime}" MinValue="0" UpValue="0.1" DownValue="-0.1"/>
                            <Slider Margin="10 0" Width="200" Minimum="0" Maximum="60" Value="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.GradientStop1EndTime}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 3">
                            <TextBlock Text="Color2~3 Gradient Start Time"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.GradientStop2StartTime}" MinValue="0" UpValue="0.1" DownValue="-0.1"/>
                            <Slider Margin="10 0" Width="200" Minimum="0" Maximum="60" Value="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.GradientStop2StartTime}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 3">
                            <TextBlock Text="Color2~3 Gradient End Time"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.GradientStop2EndTime}" MinValue="0" UpValue="0.1" DownValue="-0.1"/>
                            <Slider Margin="10 0" Width="200" Minimum="0" Maximum="60" Value="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.GradientStop2EndTime}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </DataTemplate>
            
            <!-- CastBar.BaseSettings -->
            <DataTemplate x:Key="DT_CastBar_BaseSettings">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel DataContext="{Binding OverlayViewComponent}">
                        <StackPanel Orientation="Horizontal">
                            <Label Content=" Bar Type " Width="180"/>
                            <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.CastBarSettingsData.BarFormTypeCollection}"
                                      SelectedItem="{Binding OverlayDataModel.CastBarSettingsData.BarFormType}"/>
                        </StackPanel>

                        <Label Content=" Bar Margin " />
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>

                        <Label Content=" Bar Inner Margin "/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarInnerMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarInnerMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarInnerMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarInnerMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>


                        <Label Content=" Corner Radius "/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="T-Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl MinValue="0" ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.CornerRadius_TopLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="T-Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl MinValue="0" ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.CornerRadius_TopRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="B-Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl MinValue="0" ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.CornerRadius_BottomRight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="B-Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl MinValue="0" ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.CornerRadius_BottomLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>

                        <Label Content=" Border Thickness "/>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BorderThickness_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BorderThickness_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BorderThickness_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource ItemStackPanel}">
                                <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BorderThickness_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">
                            <Label Content=" Inner HorizontalAlignment " Width="180" Margin="0 2"/>
                            <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.CastBarSettingsData.BarHorizontalAlignmentCollection}"
                                      SelectedItem="{Binding OverlayDataModel.CastBarSettingsData.BarHorizontalAlignment}"/>
                        </StackPanel>

                    </StackPanel>
                </Border>

            </DataTemplate>
            <!-- CastBar.ColorSettings -->
            <DataTemplate x:Key="DT_CastBar_ColorSettings">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel DataContext="{Binding OverlayViewComponent}">

                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarBorder_Base}"/>
                            <TextBlock Text=" Border Color "/>
                            <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BorderColor}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BorderColor, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarBackgroung_Base}"/>
                            <TextBlock Text=" Background Color "/>
                            <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BackgroundColor}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BackgroundColor, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor1_Base}"/>
                            <TextBlock Text=" Bar Color (1) "/>
                            <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BarColor1_Base}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BarColor1_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor2_Base}"/>
                            <TextBlock Text=" Bar Color (2) "/>
                            <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BarColor2_Base}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BarColor2_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor3_Base}"/>
                            <TextBlock Text=" Bar Color (3) "/>
                            <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BarColor3_Base}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BarColor3_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>

            </DataTemplate>
            <!-- CastBar.Gradient -->
            <DataTemplate x:Key="DT_CastBar_Gradient">
                <Border Margin="5">
                    <Border.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="60"/>
                        </Style>
                    </Border.Resources>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 3">
                            <TextBlock Text="Color1~2 Gradient Start Time"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.GradientStop1StartTime}" MinValue="0" UpValue="0.1" DownValue="-0.1"/>
                            <Slider Margin="10 0" Width="200" Minimum="0" Maximum="60" Value="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.GradientStop1StartTime}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 3">
                            <TextBlock Text="Color1~2 Gradient End Time"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.GradientStop1EndTime}" MinValue="0" UpValue="0.1" DownValue="-0.1"/>
                            <Slider Margin="10 0" Width="200" Minimum="0" Maximum="60" Value="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.GradientStop1EndTime}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 3">
                            <TextBlock Text="Color2~3 Gradient Start Time"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.GradientStop2StartTime}" MinValue="0" UpValue="0.1" DownValue="-0.1"/>
                            <Slider Margin="10 0" Width="200" Minimum="0" Maximum="60" Value="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.GradientStop2StartTime}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="0 3">
                            <TextBlock Text="Color2~3 Gradient End Time"/>
                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.GradientStop2EndTime}" MinValue="0" UpValue="0.1" DownValue="-0.1"/>
                            <Slider Margin="10 0" Width="200" Minimum="0" Maximum="60" Value="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.GradientStop2EndTime}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </DataTemplate>
            
        </ResourceDictionary>
    </UserControl.Resources>

    <Border Background="White">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="540" Width="540"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="33*"/>
                <RowDefinition Height="55*"/>
                <RowDefinition Height="12*"/>
            </Grid.RowDefinitions>
            <TabControl Grid.RowSpan="100" BorderThickness="0 1 0 0" Margin="0 0 10 0" Background="White">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="Width" Value="70"/>
                    </Style>
                </TabControl.Resources>
                <TabItem Header="Common">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <StackPanel>
                            <fCtrl:BoxFoldContent Title=" - Overlay Window - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Common_OverlayWindow}"/>
                            <fCtrl:BoxFoldContent Title=" - Overlay Opacity - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Common_OverlayOpacity}"/>
                            <fCtrl:BoxFoldContent Title=" - Overlay Visibility - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Common_OverlayVisibility}"/>
                            <fCtrl:BoxFoldContent Title=" - Overlay Background - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Common_Background}"/>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Content">
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <StackPanel>
                            <fCtrl:BoxFoldContent Title=" - Content Header Name and Width - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Content_ContentWidth}"/>
                            <fCtrl:BoxFoldContent Title=" - Content Min Height - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Content_ContentMinHeight}"/>
                        </StackPanel>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Font">
                    <Grid>
                        <!-- Content -->
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <fCtrl:BoxFoldContent Title=" - Title Font -" InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Font_TitleFont}"/>
                                <fCtrl:BoxFoldContent Title=" - Header Font - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Font_HeaderFont}"/>
                                <fCtrl:BoxFoldContent Title=" - Content Font - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Font_ContentFont}"/>
                            </StackPanel>
                        </ScrollViewer>
                        <!-- Edit View -->
                        <Border HorizontalAlignment="Stretch" Background="White">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayCustomTempData.BaseFontCustomVisibility}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <view:FontEditView EditFontInfo="{Binding OverlayViewComponent.OverlayDataModel.OverlayCustomTempData.ChangeTargetFontInfo, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                <Border Grid.Row="1" HorizontalAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <Button Width="160" Height="24" Margin="5" Content="Edit End" VerticalAlignment="Center" Command="{Binding OverlayViewComponent.FontEditEndCommand}" />
                                        <Button Width="160" Height="24" Margin="5" Content="Cancel" VerticalAlignment="Center" Command="{Binding OverlayViewComponent.FontEditCancelCommand}" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="Color">
                    <TabItem.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:IntUpDownControl}">
                            <Setter Property="Width" Value="60"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="60"/>
                        </Style>
                    </TabItem.Resources>
                    <Grid>
                        <!-- Content -->
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <fCtrl:BoxFoldContent Title=" - [Base] Main Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_BaseColor_MenuMain}"/>
                                <fCtrl:BoxFoldContent Title=" - [Base] Sub Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_BaseColor_MenuSub}"/>
                                <fCtrl:BoxFoldContent Title=" - [Base] Background Color - (Shadow = Type 'DropShadow' Only.)" InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_BaseColor_Background}"/>
                                <Border Margin="1 10" BorderThickness="0 1 0 0" BorderBrush="DimGray"/>
                                <fCtrl:BoxFoldContent Title=" - [Overlay] Header Text Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_HeaderText}"/>
                                <fCtrl:BoxFoldContent Title=" - [Overlay] Header Bar Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_HeaderBar}"/>
                                <Border Margin="1 10" BorderThickness="0 1 0 0" BorderBrush="DimGray"/>
                                <fCtrl:BoxFoldContent Title=" - [Timeline] ENEMY Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_TypeColorENEMY}"/>
                                <fCtrl:BoxFoldContent Title=" - [Timeline] TANK Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_TypeColorTANK}"/>
                                <fCtrl:BoxFoldContent Title=" - [Timeline] DPS Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_TypeColorDPS}"/>
                                <fCtrl:BoxFoldContent Title=" - [Timeline] HEALER Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_TypeColorHEALER}"/>
                                <fCtrl:BoxFoldContent Title=" - [Timeline] PET Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_TypeColorPET}"/>
                                <fCtrl:BoxFoldContent Title=" - [Timeline] GIMMICK Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_TypeColorGIMMICK}"/>
                                <fCtrl:BoxFoldContent Title=" - [Timeline] UNKNOWN Color - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_Color_TimelineColor_TypeColorUNKNOWN}"/>
                            </StackPanel>
                        </ScrollViewer>
                        <!-- Edit View -->
                        <Border HorizontalAlignment="Stretch" Background="White" >
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayCustomTempData.StringColorCustomVisibility}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <view:ColorEditView EditColor="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettings.EditBindColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Border Grid.Row="1" HorizontalAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <Button Width="160" Height="24" Margin="5" Content="Edit End" VerticalAlignment="Center" Command="{Binding OverlayViewComponent.EditCloseCommand}" CommandParameter="StringColor"/>
                                        <Button Width="160" Height="24" Margin="5" Content="Cancel" VerticalAlignment="Center" Command="{Binding OverlayViewComponent.StringColorEditCancelCommand}" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="ActiveBar">
                    <TabItem.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </TabItem.Resources>
                    <Grid>
                        <!-- Content -->
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <fCtrl:BoxFoldContent Title=" - Base Settings - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_ActiveBar_BaseSettings}"/>
                                <fCtrl:BoxFoldContent Title=" - Text Settings - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_ActiveBar_TextSettings}"/>
                                <fCtrl:BoxFoldContent Title=" - Color Settings - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_ActiveBar_ColorSettings}"/>
                                <fCtrl:BoxFoldContent Title=" - Gradient Settings- " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_ActiveBar_Gradient}"/>
                            </StackPanel>
                        </ScrollViewer>
                        <!-- Edit View -->
                        <Border HorizontalAlignment="Stretch" Background="White">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayCustomTempData.ActiveColorCustomVisibility}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <view:ColorEditView EditColor="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.EditBindColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Border Grid.Row="1" HorizontalAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <Button Width="160" Height="24" Margin="5" Content="Edit End" VerticalAlignment="Center" Command="{Binding OverlayViewComponent.ActiveColorEditEndCommand}" />
                                        <Button Width="160" Height="24" Margin="5" Content="Cancel" VerticalAlignment="Center" Command="{Binding OverlayViewComponent.ActiveColorEditCancelCommand}" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="CastBar">
                    <TabItem.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                        <Style TargetType="{x:Type fCtrl:DoubleUpDownControl}">
                            <Setter Property="Width" Value="70"/>
                        </Style>
                    </TabItem.Resources>
                    <Grid>
                        <!-- Content -->
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <fCtrl:BoxFoldContent Title=" - Base Settings - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_CastBar_BaseSettings}"/>
                                <fCtrl:BoxFoldContent Title=" - Color Settings - " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_CastBar_ColorSettings}"/>
                                <fCtrl:BoxFoldContent Title=" - Gradient Settings- " InnerDataContext="{Binding}" InnerDataTemplate="{StaticResource DT_CastBar_Gradient}"/>
                            </StackPanel>
                        </ScrollViewer>
                        <!-- Edit View -->
                        <Border HorizontalAlignment="Stretch" Background="White">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayCustomTempData.CastColorCustomVisibility}" Value="True">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <view:ColorEditView EditColor="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.EditBindColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Border Grid.Row="1" HorizontalAlignment="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <Button Width="160" Height="24" Margin="5" Content="Edit End" VerticalAlignment="Center" Command="{Binding OverlayViewComponent.CastColorEditEndCommand}" />
                                        <Button Width="160" Height="24" Margin="5" Content="Cancel" VerticalAlignment="Center" Command="{Binding OverlayViewComponent.CastColorEditCancelCommand}" />
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>

                </TabItem>
            </TabControl>
            <GridSplitter Grid.RowSpan="100" Width="3" Margin="0 15" IsTabStop="False"/>
            <view:OverlayPreview  Grid.Column="1" Grid.RowSpan="2"/>
            <Grid Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition  Width="50"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <TextBlock Text="Time: " HorizontalAlignment="Center"/>
                <Slider Grid.Column="1" TickFrequency="0.1" Maximum="14" Minimum="0" Value="{Binding OverlayViewComponent.OverlayPreviewObjectModel.TimerData.CurrentCombatTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
            <!--
            <StackPanel Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Label  Content="* Not Preview *" />
                <Label  Content="(0.0.6 実装予定)" />
            </StackPanel>
            -->
        </Grid>
    </Border>
</UserControl>