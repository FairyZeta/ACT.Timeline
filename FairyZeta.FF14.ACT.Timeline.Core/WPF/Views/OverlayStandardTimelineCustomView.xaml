<UserControl x:Class="FairyZeta.FF14.ACT.Timeline.Core.WPF.Views.OverlayStandardTimelineCustomView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fCtrl="clr-namespace:FairyZeta.Framework.WPF.Controls;assembly=FairyZeta.Framework"
             xmlns:fConv="clr-namespace:FairyZeta.Framework.WPF.Converters;assembly=FairyZeta.Framework"
             xmlns:view="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Views"
             xmlns:dData="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core.WPF.Desing"
             xmlns:enum="clr-namespace:FairyZeta.FF14.ACT.Timeline.Core"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="900"
             d:DataContext="{d:DesignInstance Type=dData:Desing_OverlayCustomWindowViewModel, IsDesignTimeCreatable=True}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Style/StandardTimelineStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <fConv:ColorToSolidColorBrushConverter x:Key="Color2SBrush"/>
            
            <Style x:Key="DataGridWidthTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="Width" Value="50"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Right"/>
            </Style>
            <Style x:Key="DataGridCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Width" Value="100"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

            <Style x:Key="DoubleValueUpDownRepeatButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Background" Value="Transparent"/>
            </Style>
            <Style x:Key="DoubleValueUpRepeatButton" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource DoubleValueUpDownRepeatButton}">
                <Setter Property="Content" Value="+"/>
                <Setter Property="BorderThickness" Value="0 1 1 1"/>
                <Setter Property="Padding" Value="0 -5 0 0"/>
            </Style>
            <Style x:Key="DoubleValueDownRepeatButton" TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource DoubleValueUpDownRepeatButton}">
                <Setter Property="Content" Value="-"/>
                <Setter Property="BorderThickness" Value="0 0 1 1"/>
                <Setter Property="Padding" Value="1 -5 0 0"/>
            </Style>

            <Style x:Key="ItemStackPanel" TargetType="{x:Type StackPanel}">
                <Setter Property="Orientation" Value="Horizontal"/>
                <Setter Property="Margin" Value="0 2 0 2"/>
            </Style>
            
            <Style x:Key="JobFilterTitleLabel" TargetType="{x:Type Label}">
            </Style>

            <Style x:Key="TypeFilterCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Width" Value="140"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="10 2"/>
            </Style>

            <Style x:Key="TankModeFilterCheckBoxStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="Width" Value="70"/>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Border Background="White">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="540" Width="540"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="33*"/>
                <RowDefinition Height="55*"/>
                <RowDefinition Height="12*"/>
            </Grid.RowDefinitions>
            <TabControl Grid.RowSpan="100" BorderThickness="0 1 0 0" Margin="0 0 10 0">
                <TabItem Header="Common">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderBrush="Gray" BorderThickness="1" Margin="10 15 10 10"   CornerRadius="3">
                            <Grid Margin="5">
                                <Label Content=" Overlay FontSize " Width="110" Height="20" Padding="3 0" Background="White" Margin="0 -15 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                <StackPanel Margin="0 10" DataContext="{Binding OverlayViewComponent}">
                                    <StackPanel Margin="0 5" >
                                        <StackPanel Style="{StaticResource ItemStackPanel}">
                                            <Label Content="TitleBar FontSize" Padding="0" Width="120"/>
                                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.TitleBarFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Margin="0 5" >
                                        <StackPanel Style="{StaticResource ItemStackPanel}">
                                            <Label Content="Header FontSize" Padding="0" Width="120"/>
                                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.HeaderFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Margin="0 5" >
                                        <StackPanel Style="{StaticResource ItemStackPanel}">
                                            <Label Content="Content FontSize" Padding="0" Width="120" />
                                            <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayGenericSettingsData.ContentFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="1" Margin="10 15 10 10"   CornerRadius="3">
                            <Grid Margin="5">
                                <Label Content=" Overlay Opacity " Width="110" Height="20" Padding="3 0" Background="White" Margin="0 -15 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                <StackPanel Margin="0 10" DataContext="{Binding OverlayViewComponent}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="100"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Content="Background"/>
                                        <Slider Grid.Column="1" Width="100" Minimum="0" Maximum="100"
                                                Value="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundOpacity}"/>
                                        <Label Grid.Column="2" Content="{Binding OverlayDataModel.OverlayGenericSettingsData.BackgroundOpacity}"/>
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="100"/>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Column="0" Content="Content"/>
                                        <Slider Grid.Column="1" Width="100" Minimum="0" Maximum="100"
                                                Value="{Binding OverlayDataModel.OverlayGenericSettingsData.ContentOpacity}"/>
                                        <Label Grid.Column="2" Content="{Binding OverlayDataModel.OverlayGenericSettingsData.ContentOpacity}"/>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="2" BorderBrush="Gray" BorderThickness="1" Margin="10 15 10 10"   CornerRadius="3">
                            <Grid Margin="5">
                                <Label Content=" Overlay Visibility " Width="120" Height="20" Padding="3 0" Background="White" Margin="0 -15 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                <StackPanel Margin="0 10" DataContext="{Binding OverlayViewComponent}">
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0" Content="TitleBar Visibility" 
                                                  IsChecked="{Binding OverlayDataModel.OverlayGenericSettingsData.TitleBarVisibility}"/>
                                    </Grid>
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0" Content="ContentHeader Visibility" 
                                                  IsChecked="{Binding OverlayDataModel.OverlayGenericSettingsData.ContentHeaderVisibility}"/>
                                    </Grid>
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="DataGrid">
                    <Border Grid.Row="0" BorderBrush="Gray" BorderThickness="1" Margin="10 15 10 10"   CornerRadius="3">
                        <Grid Margin="5">
                            <Label Content=" Overlay Type Filter " Width="110" Height="20" Padding="3 0" Background="White" Margin="0 -15 0 0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <StackPanel Margin="0 10" DataContext="{Binding OverlayViewComponent}">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="T-No" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.TimeNoVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.TimeNoWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="Time" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.ActionTimeVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.ActionTimeWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="Type" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.TypeVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.TypeWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="Job" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.JobVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.JobWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="TankMode" Style="{StaticResource DataGridCheckBoxStyle}" IsEnabled="False"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.TankModeVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.TankModeWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                               IsEnabled="False"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="Action" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.ActionVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.ActionWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="Active" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.ActiveVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.ActiveWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="Alert" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.AlertVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.AlertWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <CheckBox Content="Anc" Style="{StaticResource DataGridCheckBoxStyle}"
                                              IsChecked="{Binding OverlayDataModel.OverlayItemVisibilitySettingsData.JumpVisibility}"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.OverlayContentSettingsData.JumpWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                
                            </StackPanel>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Color">
                    <TabItem.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </TabItem.Resources>
                    <Grid>
                        <StackPanel>
                            <Label Content=" - Base Color - "/>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.MenuMain_Base}"/>
                                <TextBlock Text=" Menu Main Color "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.MenuMain_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.MenuMain_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.MenuSub_Base}"/>
                                <TextBlock Text=" Menu Sub  Color "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.MenuSub_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.MenuSub_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.Background_Base}"/>
                                <TextBlock Text=" Background Color "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.Background_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.Background_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <Label Content=" - Timeline Color - "/>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.HeaderText_Base}"/>
                                <TextBlock Text=" Header Text Color "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.HeaderText_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.HeaderText_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.HeaderBar_Base}"/>
                                <TextBlock Text=" Header Bar  Color "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.HeaderBar_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.HeaderBar_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.TypeColorUNKNOWN_Base}"/>
                                <TextBlock Text=" Type Color [UNKNOWN] "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorUNKNOWN_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorUNKNOWN_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.TypeColorENEMY_Base}"/>
                                <TextBlock Text=" Type Color [ENEMY] "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorENEMY_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorENEMY_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.TypeColorTANK_Base}"/>
                                <TextBlock Text=" Type Color [TANK] "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorTANK_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorTANK_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.TypeColorDPS_Base}"/>
                                <TextBlock Text=" Type Color [DPS] "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorDPS_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorDPS_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.TypeColorHEALER_Base}"/>
                                <TextBlock Text=" Type Color [HEALER]  "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorHEALER_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorHEALER_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.TypeColorPET_Base}"/>
                                <TextBlock Text=" Type Color [PET] "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorPET_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorPET_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding OverlayViewComponent.ColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.TypeColorGIMMICK_Base}"/>
                                <TextBlock Text=" Type Color [GIMMICK] "/>
                                <TextBlock Text="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorGIMMICK_Base}"
                                           Foreground="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.TypeColorGIMMICK_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </StackPanel>
                        <Border  HorizontalAlignment="Stretch">
                            <Grid >
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayCustomTempData.StringColorCustomVisibility}" Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <view:ColorEditView EditColor="{Binding OverlayViewComponent.OverlayDataModel.OverlayColorSettingsData.EditBindColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Border Grid.Row="1" HorizontalAlignment="Left">
                                    <Button Width="160" Height="24" Margin="5" Content="Edit End" VerticalAlignment="Top" Command="{Binding OverlayViewComponent.EditCloseCommand}" CommandParameter="StringColor"/>    
                                </Border>
                                
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="ActiveBar">
                    <TabItem.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </TabItem.Resources>
                    <Grid>
                        <StackPanel DataContext="{Binding OverlayViewComponent}">
                            <Label Content=" - ActiveBar Base Settings - "/>
                            <StackPanel Orientation="Horizontal">
                                <Label Content=" Bar Type " Width="180"/>
                                <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.BarFormTypeCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.BarFormType}"/>
                            </StackPanel>
                            
                            <Label Content=" Bar Margin " />
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </StackPanel>


                            <Label Content=" Bar Inner Margin "/>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarInnerMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarInnerMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarInnerMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BarInnerMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </StackPanel>

                            <!--
                            <Label Content=" Corner Radius "/>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.CornerRadius_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.CornerRadius_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.CornerRadius_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.CornerRadius_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </StackPanel>
                            -->

                            <Label Content=" Border Thickness "/>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BorderThickness_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BorderThickness_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BorderThickness_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.ActiveBarSettingsData.BorderThickness_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <Label Content=" Inner HorizontalAlignment " Width="180" Margin="0 2"/>
                                <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.BarHorizontalAlignmentCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.BarHorizontalAlignment}"/>
                            </StackPanel>


                            <Label Content=" - Text Settings (Common) - "/>
                            <StackPanel Orientation="Horizontal">
                                <Label Content=" Text HorizontalAlignment " Width="180" Margin="0 2"/>
                                <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.TextHorizontalAlignmentCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.TextHorizontalAlignment}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Label Content=" Text VerticalAlignment " Width="180" Margin="0 2"/>
                                <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.TextVerticalAlignmentCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.TextVerticalAlignment}"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <Label Content=" Text Double Style " Width="180" Margin="0 2"/>
                                <ComboBox Height="24" Width="120" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.ActiveBarSettingsData.DoubleStyleCollection}"
                                      SelectedItem="{Binding OverlayDataModel.ActiveBarSettingsData.DoubleVisibilityStyle}"/>
                                <Label Content=" (N0 =軽い, N2=かなり重い) " Margin="0 2"/>
                            </StackPanel>

                            <Label Content=" - Color Settings - "/>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarBorder_Base}"/>
                                <TextBlock Text=" Border Color "/>
                                <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BorderColor}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BorderColor, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarBackgroung_Base}"/>
                                <TextBlock Text=" Background Color "/>
                                <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BackgroundColor}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BackgroundColor, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor1_Base}"/>
                                <TextBlock Text=" Bar Color (1) "/>
                                <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor1_Base}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor1_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor2_Base}"/>
                                <TextBlock Text=" Bar Color (2) "/>
                                <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor2_Base}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor2_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding ActiveColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor3_Base}"/>
                                <TextBlock Text=" Bar Color (3) "/>
                                <TextBlock Text="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor3_Base}"
                                           Foreground="{Binding OverlayDataModel.ActiveBarSettingsData.BarColor3_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <Label Content="※Bar Color は動かした時点で変更されます。"/>
                        </StackPanel>
                        <Border  HorizontalAlignment="Stretch">
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayCustomTempData.ActiveColorCustomVisibility}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <view:ColorEditView EditColor="{Binding OverlayViewComponent.OverlayDataModel.ActiveBarSettingsData.EditBindColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Border Grid.Row="1" HorizontalAlignment="Left">
                                    <Button Width="160" Height="24" Margin="5" Content="Edit End" VerticalAlignment="Top" Command="{Binding OverlayViewComponent.ActiveColorEditEndCommand}" />
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="CastBar">
                    <TabItem.Resources>
                        <Style TargetType="Button">
                            <Setter Property="Width" Value="50" />
                            <Setter Property="Margin" Value="2 2"/>
                        </Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Width" Value="180"/>
                            <Setter Property="Margin" Value="5 0 0 0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </TabItem.Resources>
                    <Grid>
                        <StackPanel DataContext="{Binding OverlayViewComponent}">
                            <Label Content=" - ActiveBar Base Settings - "/>
                            <StackPanel Orientation="Horizontal">
                                <Label Content=" Bar Type " Width="180"/>
                                <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.CastBarSettingsData.BarFormTypeCollection}"
                                      SelectedItem="{Binding OverlayDataModel.CastBarSettingsData.BarFormType}"/>
                            </StackPanel>

                            <Label Content=" Bar Margin " />
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </StackPanel>


                            <Label Content=" Bar Inner Margin "/>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarInnerMargin_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarInnerMargin_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarInnerMargin_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BarInnerMargin_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </StackPanel>

                            <!--
                            <Label Content=" Corner Radius "/>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.CornerRadius_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.CornerRadius_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.CornerRadius_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.CornerRadius_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </StackPanel>
                            -->

                            <Label Content=" Border Thickness "/>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Left" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BorderThickness_Left, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Top" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BorderThickness_Top, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Right" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BorderThickness_Right, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                                </StackPanel>
                                <StackPanel Style="{StaticResource ItemStackPanel}">
                                    <Label Content="Bottom" Padding="0" Margin="0 0 5 0" Width="40" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
                                    <fCtrl:DoubleUpDownControl ChangedValue="{Binding OverlayDataModel.CastBarSettingsData.BorderThickness_Bottom, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinValue="0"/>
                                </StackPanel>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <Label Content=" Inner HorizontalAlignment " Width="180" Margin="0 2"/>
                                <ComboBox Height="24" Width="240" VerticalContentAlignment="Center"
                                      ItemsSource="{Binding OverlayDataModel.CastBarSettingsData.BarHorizontalAlignmentCollection}"
                                      SelectedItem="{Binding OverlayDataModel.CastBarSettingsData.BarHorizontalAlignment}"/>
                            </StackPanel>


                            <Label Content=" - Color Settings - "/>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarBorder_Base}"/>
                                <TextBlock Text=" Border Color "/>
                                <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BorderColor}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BorderColor, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarBackgroung_Base}"/>
                                <TextBlock Text=" Background Color "/>
                                <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BackgroundColor}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BackgroundColor, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor1_Base}"/>
                                <TextBlock Text=" Bar Color (1) "/>
                                <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BarColor1_Base}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BarColor1_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor2_Base}"/>
                                <TextBlock Text=" Bar Color (2) "/>
                                <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BarColor2_Base}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BarColor2_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Content="EDIT"
                                        Command="{Binding CastColorEditCommand}"
                                        CommandParameter="{x:Static enum:ColorEditTarget.BarColor3_Base}"/>
                                <TextBlock Text=" Bar Color (3) "/>
                                <TextBlock Text="{Binding OverlayDataModel.CastBarSettingsData.BarColor3_Base}"
                                           Foreground="{Binding OverlayDataModel.CastBarSettingsData.BarColor3_Base, Converter={StaticResource Color2SBrush}, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                            <Label Content="※Bar Color は動かした時点で変更されます。"/>
                        </StackPanel>
                        <Border  HorizontalAlignment="Stretch">
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding OverlayViewComponent.OverlayDataModel.OverlayCustomTempData.CastColorCustomVisibility}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="40"/>
                                </Grid.RowDefinitions>
                                <view:ColorEditView EditColor="{Binding OverlayViewComponent.OverlayDataModel.CastBarSettingsData.EditBindColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Border Grid.Row="1" HorizontalAlignment="Left">
                                    <Button Width="160" Height="24" Margin="5" Content="Edit End" VerticalAlignment="Top" Command="{Binding OverlayViewComponent.CastColorEditEndCommand}" />
                                </Border>
                            </Grid>
                        </Border>
                    </Grid>

                </TabItem>
            </TabControl>
            <GridSplitter Grid.RowSpan="100" Width="3" Margin="0 15"/>
            <view:StandardTimelineView Grid.Column="1" Grid.RowSpan="100" Margin="10 50 10 50"/>
        </Grid>
    </Border>
</UserControl>