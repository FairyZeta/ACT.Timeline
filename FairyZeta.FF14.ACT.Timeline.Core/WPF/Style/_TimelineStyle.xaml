<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="__ColorBaseStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <System:Double x:Key="CaptionHeight">0</System:Double>
    <Style TargetType="{x:Type Window}" x:Key="DefaultWindowStyle">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CornerRadius="3" GlassFrameThickness="1" ResizeBorderThickness="8" UseAeroCaptionButtons="False" CaptionHeight="{DynamicResource CaptionHeight}" />
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="#FF494949"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- アウトラインテキスト(旧LABEL, 未使用) -->
    <Style x:Key="OutlineTextStyle" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="#88217AA2" FontSize="{TemplateBinding FontSize}">
                            <TextBlock.Effect>
                                <BlurEffect Radius="2"/>
                            </TextBlock.Effect>
                            <TextBlock.RenderTransform>
                                <TranslateTransform X="0" Y="1" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="#88217AA2" FontSize="{TemplateBinding FontSize}">
                            <TextBlock.Effect>
                                <BlurEffect Radius="2"/>
                            </TextBlock.Effect>
                            <TextBlock.RenderTransform>
                                <TranslateTransform X="0" Y="-1" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="#88217AA2" FontSize="{TemplateBinding FontSize}">
                            <TextBlock.Effect>
                                <BlurEffect Radius="2"/>
                            </TextBlock.Effect>
                            <TextBlock.RenderTransform>
                                <TranslateTransform X="1" Y="0" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="#88217AA2" FontSize="{TemplateBinding FontSize}">
                            <TextBlock.Effect>
                                <BlurEffect Radius="2"/>
                            </TextBlock.Effect>
                            <TextBlock.RenderTransform>
                                <TranslateTransform X="-1" Y="0" />
                            </TextBlock.RenderTransform>
                        </TextBlock>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="#BFE2EBF5" FontSize="{TemplateBinding FontSize}">
                            <TextBlock.Effect>
                                <BlurEffect Radius="0"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OutlineTextBlock" TargetType="{x:Type TextBlock}">
        <Style.Resources>
            <DropShadowEffect x:Key="TestEffect1" Color="#88217AA2" BlurRadius="2" Direction="315" ShadowDepth="1"/>
        </Style.Resources>
        <Setter Property="Effect" Value="{StaticResource TestEffect1}"/>
        <Setter Property="Foreground" Value="#BFE2EBF5"/>
    </Style>
    
    <Style x:Key="CaptionButtonStyleKey" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontFamily" Value="Marlett"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="Transparent" SnapsToDevicePixels="True">
                        <Border.Effect>
                            <DropShadowEffect Opacity="0"/>
                        </Border.Effect>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Color)" Storyboard.TargetName="border">
                                            <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.Opacity)" Storyboard.TargetName="border">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <!-- ScrollBar  -->
    <Color x:Key="BackgroundColor">#AE2F33</Color>
    <Color x:Key="StandardColor">#800000</Color>
    <Color x:Key="HoverColor">#AAC64D45</Color>
    <Color x:Key="PressedColor">#AA0000</Color>
    <Color x:Key="DialogBackgroundColor">#FF666666</Color>
    <Color x:Key="ScollBarBackgroundStart">#77C64D45</Color>
    <Color x:Key="ScollBarBackgroundEnd">#99C64D45</Color>
    <SolidColorBrush x:Key="StandardBrush" Color="{StaticResource StandardColor}" />
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
    <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}" />
    <LinearGradientBrush x:Key="ScollBarBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
        <LinearGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="{StaticResource ScollBarBackgroundStart}" />
            <GradientStop Offset="1" Color="{StaticResource ScollBarBackgroundEnd}" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <Style x:Key="ScrollButtons" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Background="Transparent">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Name="Grid">
                        <Rectangle Name="Rectangle1"
						 Width="7"
						 Height="Auto"
						 HorizontalAlignment="Stretch"
						 VerticalAlignment="Stretch"
						 Fill="{TemplateBinding Background}"
						 RadiusX="4"
						 RadiusY="4" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MyScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidth}}" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <RepeatButton x:Name="DecreaseRepeat"
			Command="ScrollBar.LineUpCommand"
			Foreground="{StaticResource StandardBrush}"
			Style="{DynamicResource ScrollButtons}">
                <Path x:Name="DecreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="F1 M 3.5,0L 0,7L 7,7L 3.5,0 Z "
					Fill="{StaticResource StandardBrush}" />
            </RepeatButton>
            <Track x:Name="PART_Track"
			Grid.Row="1"
			Focusable="false"
			IsDirectionReversed="true">
                <Track.Thumb>
                    <Thumb x:Name="Thumb"
					Background="{DynamicResource ButtonDefaultBrush}"
					Style="{DynamicResource ScrollThumbs}" />
                </Track.Thumb>
            </Track>
            <RepeatButton x:Name="IncreaseRepeat"
			Grid.Row="2"
			Command="ScrollBar.LineDownCommand"
			Foreground="{DynamicResource StandardBrush}"
			Style="{DynamicResource ScrollButtons}">
                <Path x:Name="IncreaseArrow"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="F1 M 3.5,7L 7,0L 0,0L 3.5,7 Z "
					Fill="{StaticResource StandardBrush}" />
            </RepeatButton>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="IncreaseRepeat" Property="IsMouseOver" Value="true">
                <Setter TargetName="IncreaseArrow" Property="Fill" 
                        Value="{StaticResource HoverBrush}" />
            </Trigger>
            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                <Setter TargetName="Thumb" Property="Background" 
                         Value="{StaticResource HoverBrush}" />
            </Trigger>
            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                <Setter TargetName="Thumb" Property="Background" 
                        Value="{StaticResource StandardBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

</ResourceDictionary>